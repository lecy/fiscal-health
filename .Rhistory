library(haven)
path = file.path("C:\Users\LLo\Box\CDCs\Background Content\From NACEDA Shared Dropbox\Past Surveys\Organizations Surveyed-Sampled", "Final2009Frame_1.sav")
dataset = read_sav(path)
path = file.path("Users\LLo\Box\CDCs\Background Content\From NACEDA Shared Dropbox\Past Surveys\Organizations Surveyed-Sampled", "Final2009Frame_1.sav")
path = file.path("Users/LLo/Box/CDCs/Background Content/From NACEDA Shared Dropbox/Past Surveys/Organizations Surveyed-Sampled", "Final2009Frame_1.sav")
view(path)
data(path)
view(path)
library(haven)
Final2009Frame_1 <- read_sav("C:/Users/LLo/Box/CDCs/Background Content/From NACEDA Shared Dropbox/Past Surveys/Organizations Surveyed-Sampled/Final2009Frame_1.sav")
View(Final2009Frame_1)
write.csv(Final2009Frame_1, "C:/Users/LLo/Box/CDCs/Background Content/From NACEDA Shared Dropbox/Past Surveys/Organizations Surveyed-Sampled/Final2009Frame.csv", row.names= TRUE)
warnings()
core2 %>%
mutate( # equity_ratio = equity_ratio * 10000,
totrevenue = totrevenue / 1000,
totfuncexpns = totfuncexpns / 1000,
lndbldgsequipend = lndbldgsequipend / 1000,
totassetsend = totassetsend / 1000,
totliabend = totliabend / 1000,
totnetassetend = totnetassetend / 1000 ) %>%
select( STATE,  NTEE1, NTMAJ12,
equity_ratio,
AGE,
totrevenue, totfuncexpns,
lndbldgsequipend, totassetsend,
totnetassetend, totliabend ) %>%
stargazer( type = s.type,
digits=2,
summary.stat = c("min","p25","median",
"mean","p75","max", "sd"),
covariate.labels = c("Equity Ratio", "Age",
"Revenue ($1k)", "Expenses($1k)",
"Buildings ($1k)", "Total Assets ($1k)",
"Net Assets ($1k)", "Liabiliies ($1k)"))
knitr::opts_chunk$set( echo = TRUE,
message=F,
warning=F,
error = TRUE,
fig.width = 10,
fig.height = 6,
collapse = TRUE )
## Packages
library( haven )        # importing data files
library( tidyr )        # data wrangling
library( dplyr )        # data wrangling
library( ggplot2 )      # fancy plots
library( ggthemes )     # fancy plots
library( scales )       # re-scaling numbers
library( stargazer )    # nice tables
library( pander )       # format tables for HTML
library( knitr )        # formatting functions
library( DT )           # embed datasets in HTML docs
library( urbnthemes )   # setting the color scheme to Urban's
set_urbn_defaults(style = "print")
source( "r-functions.R" )
variable.label <- "Equity Ratio"
# stargazer table print type
# run chunk for live RMD sessions
s.type <- "text"
# stargazer table print type
# resets to html when knitting
s.type <- "html"
## Load Data
# local:
# core <- readRDS( "02-data-wrangled/core.rds" )
# from github:
URL <- "https://github.com/lecy/fiscal-health/raw/main/02-data-wrangled/core.rds"
core <- readRDS(gzcon(url( URL )))
# Preview the data:
# table( core$NTMAJ12 ) %>% kable()
# head(core) %>% pander()
# TEMPORARY VARIABLES
netassets  <- ( core$totnetassetend)
totassets <- ( core$totassetsend)
# can't divide by zero
totassets[ totassets == 0 ] <- NA
# SAVE RESULTS
core$equity_ratio <-  netassets / totassets
# summary( core$equity_ratio )
x.05 <- quantile( core$equity_ratio, 0.05, na.rm=T )
x.95 <- quantile( core$equity_ratio, 0.95, na.rm=T )
ggplot( core, aes(x = equity_ratio ) ) +
geom_density( alpha = 0.5) +
xlim( x.05, x.95 )
core2 <- core
# proportion of values that are negative
mean( core2$equity_ratio < 0, na.rm=T )
core2$equity_ratio[ core2$equity_ratio < 0 ] <- 0
# proption of values above 200%
mean( core2$equity_ratio > 50, na.rm=T )
core2$equity_ratio[ core2$equity_ratio > 50 ] <- 50
x.05 <- quantile( core$equity_ratio, 0.05, na.rm=T )
x.95 <- quantile( core$equity_ratio, 0.95, na.rm=T )
core2 <- core
# proportion of values that are negative
# mean( core2$der < 0, na.rm=T )
# proption of values above 1%
# mean( core2$der > 5, na.rm=T )
# WINSORIZATION AT 5th and 95th PERCENTILES
core2$equity_ratio[ core2$equity_ratio < x.05 ] <- x.05
core2$equity_ratio[ core2$equity_ratio > x.95 ] <- x.95
View(core2)
core2 %>%
mutate( # equity_ratio = equity_ratio * 10000,
totrevenue = totrevenue / 1000,
totfuncexpns = totfuncexpns / 1000,
lndbldgsequipend = lndbldgsequipend / 1000,
totassetsend = totassetsend / 1000,
totliabend = totliabend / 1000,
totnetassetend = totnetassetend / 1000 ) %>%
select( STATE,  NTEE1, NTMAJ12,
equity_ratio,
AGE,
totrevenue, totfuncexpns,
lndbldgsequipend, totassetsend,
totnetassetend, totliabend ) %>%
write.csv("core2_experiment.csv")
getwd()
core2$quick_ratio [core2$quick_ratio== x.95]
setwd("C:\Users\LLo\Documents\GitHub\fiscal-health")
setwd("C:/Users/LLo/Documents/GitHub/fiscal-health")
rmarkdown::render_site()
rmarkdown::render_site()
