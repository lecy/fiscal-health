---
title: "Metric 02 - Current Ratio"
author: "Lydia Lo"
date: "April 8, 2022"
font: Lato
output:
html_document:
self_contained: TRUE
toc: TRUE
toc_float: TRUE
mathjax: null
css: www/web_report.css
output_dir: "."
editor_options:
chunk_output_type: console
---
knitr::opts_chunk$set( echo = TRUE,
message=F,
warning=F,
error = TRUE,
fig.width = 10,
fig.height = 6,
collapse = TRUE )
---
title: "Metric 02 - Current Ratio"
author: "Lydia Lo"
date: "April 8, 2022"
font: Lato
output:
html_document:
self_contained: TRUE
toc: TRUE
toc_float: TRUE
mathjax: null
css: www/web_report.css
output_dir: "."
editor_options:
chunk_output_type: console
## Packages
library(urbnthemes)     # setting the color scheme to Urban's
library( haven )        # importing data files
library( tidyr )        # data wrangling
library( dplyr )        # data wrangling
library( ggplot2 )      # fancy plots
library( ggthemes )     # fancy plots
library( scales )       # re-scaling numbers
library( stargazer )    # nice tables
library( pander )       # format tables for HTML
library( knitr )        # formatting functions
library( DT )           # embed datasets in HTML docs
set_urbn_defaults(style = "print")
source( "r-functions.R" )
variable.label="Debt to Asset Ratio"
# stargazer table print type
# run chunk for live RMD sessions
s.type <- "text"
# stargazer table print type
# resets to html when knitting
s.type <- "html"
## Load Data
# local:
# core <- readRDS( "02-data-wrangled/core.rds" )
# from github:
URL <- "https://github.com/lecy/fiscal-health/raw/main/02-data-wrangled/core.rds"
core <- readRDS(gzcon(url( URL )))
# Preview the data:
# table( core$NTMAJ12 ) %>% kable()
# head(core) %>% pander()
knitr::opts_chunk$set( echo = TRUE,
message=F,
warning=F,
error = TRUE,
fig.width = 10,
fig.height = 6,
collapse = TRUE )
---
title: "Metric 02 - Current Ratio"
author: "Lydia Lo"
date: "April 8, 2022"
font: Lato
output:
html_document:
self_contained: TRUE
toc: TRUE
toc_float: TRUE
mathjax: null
css: www/web_report.css
output_dir: "."
editor_options:
chunk_output_type: console
install.packages("here")
# can't divide by zero
zero.these <- core$totassetsend == 0
core$totassetsend[ core$totassetsend == 0 ] <- NA
core$currentratio <- (core$nonintcashend + core$svngstempinvend + core$pldgegrntrcvblend + core$accntsrcvblend + core$invntriesalesend + core$prepaidexpnsend)/ (core$accntspayableend+ core$grntspayableend)
View(core)
url.soi.pc <- "https://www.dropbox.com/s/88y9sup4d3mwoo5/irs-990-pc-soi-extract-2019.csv?dl=1"
core.2019.pc <- read.csv( url.soi.pc )core.2019.pc <- select( core.2019.pc, ein, tax_pd,                 totrevenue, totfuncexpns, totnetassetend,                 lndbldgsequipend, totassetsend, totliabend )
url.soi.pc <- "https://www.dropbox.com/s/88y9sup4d3mwoo5/irs-990-pc-soi-extract-2019.csv?dl=1"
core.2019.pc <- read.csv(url.soi.pc) core.2019.pc <- select(core.2019.pc, ein, tax_pd, totrevenue, totfuncexpns, totnetassetend, lndbldgsequipend, totassetsend, totliabend )
url.soi.pc <- "https://www.dropbox.com/s/88y9sup4d3mwoo5/irs-990-pc-soi-extract-2019.csv?dl=1"
core.2019.pc <- read.csv( url.soi.pc )core.2019.pc <- select( core.2019.pc, ein, tax_pd, totrevenue, totfuncexpns, totnetassetend, lndbldgsequipend, totassetsend, totliabend)
core.2019.pc <- read.csv( url.soi.pc )
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, fig.width = 10)
library( haven )        # importing data files
library( tidyr )        # data wrangling
library( dplyr )        # data wrangling
library( ggplot2 )      # fancy plots
library( ggthemes )     # fancy plots
library( scales )       # re-scaling numbers
library( stargazer )    # nice tables
library( pander )       # format tables for HTML
library( DT )           # embed datasets in HTML docs
source( "r-functions.R" )
###
### BUSINESS MASTER FILES
###
# bmf <- read.csv( "01-data-raw/nccs-bmf-2019.csv" )
bmf.2019 <- "https://www.dropbox.com/s/bi9ii23bo8l521h/nccs-bmf-2019.csv?dl=1"
bmf <- read.csv( bmf.2019 )
bmf <- select( bmf, EIN, NAME, ADDRESS, CITY, STATE, FIPS,
RULEDATE, NTEEFINAL, NTEECC,
NTEE1, NTMAJ5, NTMAJ10, NTMAJ12,
LEVEL1,	LEVEL2, LEVEL3, LEVEL4 )
bmf$RULEDATE <- substr( bmf$RULEDATE, 1, 4 ) %>% as.numeric()
bmf$RULEDATE[ bmf$RULEDATE < 1900 ] <- NA
bmf$AGE <- 2022 - bmf$RULEDATE
# Coverage of 2019 BMF file is over 99%
#
# > nrow( core.2019.pc )
# [1] 304441
# > sum( core.2019.pc$ein %in% bmf$EIN )
# [1] 301855
###
### ADD CENSUS REGIONS
###
# census <- read.csv( "01-data-raw/us-census-bureau-regions-and-divisions.csv" )
url.census <- "https://raw.githubusercontent.com/lecy/fiscal-health/main/01-data-raw/us-census-bureau-regions-and-divisions.csv"
census <- read.csv( url.census )
bmf <- merge( bmf, census, by.x="STATE", by.y="State.Code", all.x=TRUE )
###
### CORE PC
###
# COMMON VARIABLES FOR DESCRIPTIVES
#
# totrevenue - total revenue
# totfuncexpns - total functional expenses
# lndbldgsequipend - land, buildings, equipment net assets
# totnetassetend - net assets
# VARIABLES USED FOR METRICS
#
# totassetsend - total assets end of year
# totliabend - total liabilities end of year
# core.2019.pc <- read.csv( "01-data-raw/irs-990-pc-soi-extract-2019.csv" )
url.soi.pc <- "https://www.dropbox.com/s/88y9sup4d3mwoo5/irs-990-pc-soi-extract-2019.csv?dl=1"
core.2019.pc <- read.csv( url.soi.pc )
core.2019.pc <- select( core.2019.pc, ein, tax_pd,
accntspayableend,
accntsrcvblend,
deprcatndepletn,
grntspayableend,
invntriesalesend,
lndbldgsequipend,
nonintcashend,
pldgegrntrcvblend,
prepaidexpnsend,
svngstempinvend,
totassetsend,
totfuncexpns,
totliabend,
totnetassetend,
totprgmrevnue,
totrevenue,
unrstrctnetasstsend)
###
### CORE EZ
###
# COMMON VARIABLES FOR DESCRIPTIVES
#
#  totrevnue - total revenue
#  totexpns - total functional expenses
#  NA - land, buildings, equipment net assets
#  networthend - net assets
# VARIABLES USED FOR METRICS
#
# totassetsend - total assets end of year
# totliabend - total liabilities end of year
# core.2019.ez <- read.csv( "01-data-raw/irs-990-ez-soi-extract-2019.csv" )
url.soi.ez <- "https://www.dropbox.com/s/2amoe8woboyxpza/irs-990-ez-soi-extract-2019.csv?dl=1"
core.2019.ez <- read.csv( url.soi.ez )
core.2019.ez <- select( core.2019.ez, EIN, tax_pd,
totrevnue, totexpns, networthend,
totassetsend, totliabend )
core.2019.ez <- rename( core.2019.ez,
ein = EIN,
totrevenue = totrevnue,
totfuncexpns = totexpns,
totnetassetend = networthend,
totassetsend = totassetsend,
totliabend = totliabend  )
###
###  STACK PC AND EZ FILES
###
core <- bind_rows( core.2019.pc, core.2019.ez )
core$taxyr <- substr( core$tax_pd, 1, 4 )
###
###  ADD BMF META-DATA GEO, NTEE, AND AGE FIELDS
###
# check for leading zeros problem
# class( core.2019.pc$ein )
# [1] "integer"
# class( bmf$EIN )
# [1] "integer"
core <- merge( core, bmf, by.x="ein", by.y="EIN", all.x=TRUE )
###
### ADD NTEE CODES LABELS
###
core$NTMAJ12v1 <- core$NTMAJ12
core$NTMAJ12[ core$NTMAJ12 == "AR" ] <- "Arts"
core$NTMAJ12[ core$NTMAJ12 == "BH" ] <- "Universities"
core$NTMAJ12[ core$NTMAJ12 == "ED" ] <- "Education"
core$NTMAJ12[ core$NTMAJ12 == "EH" ] <- "Hospitals"
core$NTMAJ12[ core$NTMAJ12 == "EN" ] <- "Environmental"
core$NTMAJ12[ core$NTMAJ12 == "HE" ] <- "Health"
core$NTMAJ12[ core$NTMAJ12 == "HU" ] <- "Human Services"
core$NTMAJ12[ core$NTMAJ12 == "IN" ] <- "International"
core$NTMAJ12[ core$NTMAJ12 == "MU" ] <- "Mutual Benefit"
core$NTMAJ12[ core$NTMAJ12 == "PU" ] <- "Public Benefit"
core$NTMAJ12[ core$NTMAJ12 == "RE" ] <- "Religion"
core$NTMAJ12[ core$NTMAJ12 == "UN" ] <- "Unknown"
core$NTMAJ12 <- factor( core$NTMAJ12 )
# table( core$NTMAJ12 )
###
### STUDY SAMPLE
###
url.orgs <- "https://www.dropbox.com/s/fqk05x2ox3girq7/org-sample.csv?dl=1"
orgs <- read.csv( url.orgs )
orgs <- dplyr::select( orgs, orgname, ein )
# convert to integer to avoid leading zeros problem
orgs$ein <- as.numeric( orgs$ein )
# Check how many orgs from the study sample are in the core file?
intersect( orgs$ein, core$ein ) %>% length()
setdiff(   orgs$ein, core$ein ) %>% length()
core <- filter( core, ein %in% orgs$ein )
table( core$NTMAJ12 )
# preview dataset
head(core) %>% pander()
saveRDS( core, "02-data-wrangled/core.rds" )
## Packages
library(urbnthemes)     # setting the color scheme to Urban's
library( haven )        # importing data files
library( tidyr )        # data wrangling
library( dplyr )        # data wrangling
library( ggplot2 )      # fancy plots
library( ggthemes )     # fancy plots
library( scales )       # re-scaling numbers
library( stargazer )    # nice tables
library( pander )       # format tables for HTML
library( knitr )        # formatting functions
library( DT )           # embed datasets in HTML docs
set_urbn_defaults(style = "print")
source( "r-functions.R" )
variable.label="current Ratio"
# stargazer table print type
# run chunk for live RMD sessions
s.type <- "text"
# stargazer table print type
# resets to html when knitting
s.type <- "html"
## Load Data
# local:
# core <- readRDS( "02-data-wrangled/core.rds" )
# from github:
URL <- "https://github.com/lecy/fiscal-health/raw/main/02-data-wrangled/core.rds"
core <- readRDS(gzcon(url( URL )))
# Preview the data:
# table( core$NTMAJ12 ) %>% kable()
# head(core) %>% pander()
# All defaults
knitr::include_graphics(here::here("img", "logo.png"))
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, fig.width = 10)
library( haven )        # importing data files
library( tidyr )        # data wrangling
library( dplyr )        # data wrangling
library( ggplot2 )      # fancy plots
library( ggthemes )     # fancy plots
library( scales )       # re-scaling numbers
library( stargazer )    # nice tables
library( pander )       # format tables for HTML
library( DT )           # embed datasets in HTML docs
source( "r-functions.R" )
###
### BUSINESS MASTER FILES
###
# bmf <- read.csv( "01-data-raw/nccs-bmf-2019.csv" )
bmf.2019 <- "https://www.dropbox.com/s/bi9ii23bo8l521h/nccs-bmf-2019.csv?dl=1"
bmf <- read.csv( bmf.2019 )
bmf <- select( bmf, EIN, NAME, ADDRESS, CITY, STATE, FIPS,
RULEDATE, NTEEFINAL, NTEECC,
NTEE1, NTMAJ5, NTMAJ10, NTMAJ12,
LEVEL1,	LEVEL2, LEVEL3, LEVEL4 )
bmf$RULEDATE <- substr( bmf$RULEDATE, 1, 4 ) %>% as.numeric()
bmf$RULEDATE[ bmf$RULEDATE < 1900 ] <- NA
bmf$AGE <- 2022 - bmf$RULEDATE
# Coverage of 2019 BMF file is over 99%
#
# > nrow( core.2019.pc )
# [1] 304441
# > sum( core.2019.pc$ein %in% bmf$EIN )
# [1] 301855
###
### ADD CENSUS REGIONS
###
# census <- read.csv( "01-data-raw/us-census-bureau-regions-and-divisions.csv" )
url.census <- "https://raw.githubusercontent.com/lecy/fiscal-health/main/01-data-raw/us-census-bureau-regions-and-divisions.csv"
census <- read.csv( url.census )
bmf <- merge( bmf, census, by.x="STATE", by.y="State.Code", all.x=TRUE )
###
### CORE PC
###
# COMMON VARIABLES FOR DESCRIPTIVES
#
# totrevenue - total revenue
# totfuncexpns - total functional expenses
# lndbldgsequipend - land, buildings, equipment net assets
# totnetassetend - net assets
# VARIABLES USED FOR METRICS
#
# totassetsend - total assets end of year
# totliabend - total liabilities end of year
# core.2019.pc <- read.csv( "01-data-raw/irs-990-pc-soi-extract-2019.csv" )
url.soi.pc <- "https://www.dropbox.com/s/88y9sup4d3mwoo5/irs-990-pc-soi-extract-2019.csv?dl=1"
core.2019.pc <- read.csv( url.soi.pc )
core.2019.pc <-
core.2019.pc %>%
select( ein,
tax_pd,
accntspayableend,
accntsrcvblend,
deprcatndepletn,
grntspayableend,
invntriesalesend,
lndbldgsequipend,
nonintcashend,
pldgegrntrcvblend,
prepaidexpnsend,
svngstempinvend,
totassetsend,
totfuncexpns,
totliabend,
totnetassetend,
totprgmrevnue,
totrevenue,
unrstrctnetasstsend )
# F9_01_EXP_REV_LESS_EXP_CY
# F9_01_EXP_TOT_CY
# F9_01_REV_TOT_CY
# F9_08_REV_CONTR_GOVT_GRANT
# F9_08_REV_TOT_TOT
# F9_09_EXP_DEPREC_TOT
# F9_09_EXP_INT_TOT
# F9_09_EXP_TOT_MGMT
# F9_09_EXP_TOT_PROG
# F9_09_EXP_TOT_TOT
# F9_09_EXP_TOT_TOT-F9_09_EXP_DEPREC_TOT
# F9_10_ASSET_INV_SALE_EOY
# F9_10_ASSET_LAND_BLDG_NET_EOY
# F9_10_LIAB_MTG_NOTE_EOY
# F9_10_NAFB_UNRESTRICT_EOY
# F9_10_NAFB_UNRESTRICT_BOY (edited)
###
### CORE EZ
###
# COMMON VARIABLES FOR DESCRIPTIVES
#
#  totrevnue - total revenue
#  totexpns - total functional expenses
#  NA - land, buildings, equipment net assets
#  networthend - net assets
# VARIABLES USED FOR METRICS
#
# totassetsend - total assets end of year
# totliabend - total liabilities end of year
# core.2019.ez <- read.csv( "01-data-raw/irs-990-ez-soi-extract-2019.csv" )
url.soi.ez <- "https://www.dropbox.com/s/2amoe8woboyxpza/irs-990-ez-soi-extract-2019.csv?dl=1"
core.2019.ez <- read.csv( url.soi.ez )
core.2019.ez <- select( core.2019.ez, EIN, tax_pd,
totrevnue, totexpns, networthend,
totassetsend, totliabend, prgmservrev )
core.2019.ez <- rename( core.2019.ez,
ein = EIN,
totrevenue = totrevnue,
totprgmrevnue = prgmservrev,
totfuncexpns = totexpns,
totnetassetend = networthend,
totassetsend = totassetsend,
totliabend = totliabend  )
###
###  STACK PC AND EZ FILES
###
core <- bind_rows( core.2019.pc, core.2019.ez )
core$taxyr <- substr( core$tax_pd, 1, 4 )
###
###  ADD BMF META-DATA GEO, NTEE, AND AGE FIELDS
###
# check for leading zeros problem
# class( core.2019.pc$ein )
# [1] "integer"
# class( bmf$EIN )
# [1] "integer"
core <- merge( core, bmf, by.x="ein", by.y="EIN", all.x=TRUE )
###
### ADD NTEE CODES LABELS
###
core$NTMAJ12v1 <- core$NTMAJ12
core$NTMAJ12[ core$NTMAJ12 == "AR" ] <- "Arts"
core$NTMAJ12[ core$NTMAJ12 == "BH" ] <- "Universities"
core$NTMAJ12[ core$NTMAJ12 == "ED" ] <- "Education"
core$NTMAJ12[ core$NTMAJ12 == "EH" ] <- "Hospitals"
core$NTMAJ12[ core$NTMAJ12 == "EN" ] <- "Environmental"
core$NTMAJ12[ core$NTMAJ12 == "HE" ] <- "Health"
core$NTMAJ12[ core$NTMAJ12 == "HU" ] <- "Human Services"
core$NTMAJ12[ core$NTMAJ12 == "IN" ] <- "International"
core$NTMAJ12[ core$NTMAJ12 == "MU" ] <- "Mutual Benefit"
core$NTMAJ12[ core$NTMAJ12 == "PU" ] <- "Public Benefit"
core$NTMAJ12[ core$NTMAJ12 == "RE" ] <- "Religion"
core$NTMAJ12[ core$NTMAJ12 == "UN" ] <- "Unknown"
core$NTMAJ12 <- factor( core$NTMAJ12 )
# table( core$NTMAJ12 )
###
### STUDY SAMPLE
###
url.orgs <- "https://www.dropbox.com/s/fqk05x2ox3girq7/org-sample.csv?dl=1"
orgs <- read.csv( url.orgs )
orgs <- dplyr::select( orgs, orgname, ein )
# convert to integer to avoid leading zeros problem
orgs$ein <- as.numeric( orgs$ein )
# Check how many orgs from the study sample are in the core file?
intersect( orgs$ein, core$ein ) %>% length()
setdiff(   orgs$ein, core$ein ) %>% length()
core <- filter( core, ein %in% orgs$ein )
table( core$NTMAJ12 )
# preview dataset
head(core) %>% pander()
names(core)
saveRDS( core, "02-data-wrangled/core.rds" )
